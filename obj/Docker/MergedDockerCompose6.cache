name: dockercompose10210883533883510718
services:
  ambev_developerevaluation_database:
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_PASSWORD: ev@luAt10n
      POSTGRES_USER: developer
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U developer -d developer_evaluation
      timeout: 5s
      interval: 10s
      retries: 5
    image: postgres:13
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
  ambev_developerevaluation_nosql:
    environment:
      MONGO_INITDB_ROOT_PASSWORD: ev4luAt10n
      MONGO_INITDB_ROOT_USERNAME: developer
    healthcheck:
      test:
        - CMD-SHELL
        - echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      timeout: 5s
      interval: 10s
      retries: 5
    image: mongo:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
  ambev_developerevaluation_queue:
    environment:
      RABBITMQ_DEFAULT_PASS: ev4luAt10n
      RABBITMQ_DEFAULT_USER: developer
    healthcheck:
      test:
        - CMD
        - rabbitmq-diagnostics
        - check_running
      timeout: 5s
      interval: 10s
      retries: 5
    image: rabbitmq:3.13-management
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    volumes:
      - type: volume
        source: rabbitmq_data
        target: /var/lib/rabbitmq
        volume: {}
  ambev_developerevaluation_webapi:
    build:
      context: C:\Git\mouts
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Ambev.DeveloperEvaluation.WebApi
      target: base
    container_name: Ambev.DeveloperEvaluation.WebApi
    depends_on:
      ambev_developerevaluation_database:
        condition: service_healthy
        required: true
      ambev_developerevaluation_nosql:
        condition: service_healthy
        required: true
      ambev_developerevaluation_queue:
        condition: service_healthy
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=ambev_developerevaluation_database;Port=5432;Database=developer_evaluation;Username=developer;Password=ev@luAt10n
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      MongoDbSettings__CollectionName: Sales
      MongoDbSettings__ConnectionString: mongodb://developer:ev4luAt10n@ambev_developerevaluation_nosql:27017
      MongoDbSettings__DatabaseName: DeveloperEvaluation
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
      RabbitMqSettings__ConnectionString: amqp://developer:ev4luAt10n@ambev_developerevaluation_queue:5672
      RabbitMqSettings__QueueName: Worker-Sales
    image: ambevdeveloperevaluationwebapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/Ambev.DeveloperEvaluation.WebApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Git\mouts\src\Ambev.DeveloperEvaluation.WebApi
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Git\mouts
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ferra\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ferra\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ferra\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ferra\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ferra\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ferra\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose10210883533883510718_default
volumes:
  mongo_data:
    name: dockercompose10210883533883510718_mongo_data
  postgres_data:
    name: dockercompose10210883533883510718_postgres_data
  rabbitmq_data:
    name: dockercompose10210883533883510718_rabbitmq_data